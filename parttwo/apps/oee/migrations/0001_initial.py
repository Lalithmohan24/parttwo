# Generated by Django 4.2.2 on 2023-07-01 05:08

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('first_name', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardAlertrules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('cam_name', models.CharField(blank=True, max_length=150, null=True)),
                ('rulejson', models.TextField(db_column='ruleJson')),
                ('img_ref', models.TextField()),
                ('json_formated', models.TextField()),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_alertrules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardAudioDevices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=200)),
                ('cam_name', models.CharField(max_length=100)),
                ('device_name', models.CharField(max_length=100)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_audio_devices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardAutoDelete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('file_name', models.CharField(max_length=100)),
                ('expire_time', models.IntegerField()),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_auto_delete',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardBatchprocessing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filepath', models.CharField(db_column='filePath', max_length=100)),
                ('camname', models.CharField(db_column='camName', max_length=100)),
                ('starttime', models.CharField(db_column='startTime', max_length=100)),
                ('endtime', models.CharField(db_column='endTime', max_length=100)),
                ('batchstarttime', models.CharField(db_column='BatchStartTime', max_length=100)),
                ('batchendtime', models.CharField(db_column='BatchEndTime', max_length=100)),
                ('batchsize', models.CharField(db_column='BatchSize', max_length=100)),
                ('fps', models.CharField(db_column='Fps', max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('xmlmodel', models.CharField(db_column='xmlModel', max_length=100)),
                ('modelname', models.CharField(db_column='modelName', max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('beamcount', models.CharField(max_length=100)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_batchprocessing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardCamera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('camname', models.CharField(db_column='camName', max_length=100)),
                ('source', models.CharField(max_length=100)),
                ('edge_device', models.CharField(max_length=100)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_camera',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardCamerafilters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('camname', models.CharField(db_column='camName', max_length=100)),
                ('actions', models.CharField(max_length=100)),
                ('action_params', models.CharField(max_length=3000)),
                ('edge_device', models.CharField(max_length=100)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_camerafilters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardCamError',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cam_name', models.CharField(max_length=100)),
                ('reason', models.CharField(max_length=100)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_cam_error',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ip_address', models.CharField(max_length=100)),
                ('mac_address', models.CharField(max_length=100)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardGoalTarget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cam_name', models.CharField(max_length=100)),
                ('shift', models.CharField(max_length=100)),
                ('target', models.CharField(max_length=100)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_goal_target',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardPasswordreset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=150)),
                ('otp', models.CharField(max_length=150)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_passwordreset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardPlannedStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=200)),
                ('shift', models.CharField(blank=True, max_length=200, null=True)),
                ('start_time', models.CharField(max_length=100)),
                ('end_time', models.CharField(max_length=100)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_planned_stop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_no', models.IntegerField()),
                ('unique_id', models.CharField(max_length=100)),
                ('process_name', models.CharField(max_length=100)),
                ('cam_name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('start_time', models.CharField(max_length=100)),
                ('end_time', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=100)),
                ('shift', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('info', models.CharField(max_length=300)),
                ('time', models.DateTimeField()),
                ('alert', models.CharField(max_length=100)),
                ('event', models.CharField(max_length=100)),
                ('downtime', models.CharField(max_length=100)),
                ('image_path', models.CharField(max_length=300)),
                ('downtime_category', models.CharField(max_length=100)),
                ('downtime_reason', models.CharField(max_length=200)),
                ('downtime_reason_detect', models.CharField(max_length=200)),
                ('downtime_entry_type', models.BooleanField()),
                ('alert_threshold', models.CharField(max_length=200)),
                ('alert_actual', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'dashboard_process',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardProcessMapData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('json', models.TextField()),
                ('edge_id', models.CharField(max_length=100)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_process_map_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardProcessMapDataCheckpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('json', models.TextField()),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_process_map_data_checkpoint',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardProcessNames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_name', models.CharField(max_length=150)),
                ('device_id', models.CharField(max_length=150)),
                ('process_type', models.CharField(max_length=150)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_process_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(blank=True, max_length=150, null=True)),
                ('profile_image', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('website', models.CharField(blank=True, max_length=150, null=True)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardShift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('start_time', models.CharField(blank=True, max_length=150, null=True)),
                ('end_time', models.CharField(blank=True, max_length=150, null=True)),
                ('start_day', models.BooleanField(blank=True, null=True)),
                ('end_day', models.BooleanField(blank=True, null=True)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_shift',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardSmtpbackendconfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=100)),
                ('port', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=100)),
                ('senderlist', models.CharField(db_column='senderList', max_length=1000)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_smtpbackendconfig',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardUiTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('value', models.CharField(blank=True, max_length=250, null=True)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_ui_theme',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardUserDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('template', models.CharField(max_length=100)),
                ('process_name', models.CharField(max_length=1000)),
                ('chart_type', models.CharField(max_length=100)),
                ('x_axis', models.CharField(max_length=100)),
                ('y_axis', models.CharField(max_length=100)),
                ('card_tooltip', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'dashboard_user_dashboard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardUserpermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.TextField()),
                ('user_access', models.CharField(max_length=500)),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'dashboard_userpermission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('change_message', models.TextField()),
                ('action_flag', models.PositiveSmallIntegerField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
    ]
